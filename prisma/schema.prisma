// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql" // Change this to your database provider
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  
  email      String      @unique
  password   String

  portfolio Portfolio?
}

model Portfolio {
  id            Int               @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  portfolioName String            @unique

  userId        Int @unique
  user          User              @relation(fields: [userId], references: [id])

  portfolioShares        PortfolioShare[]
  transactions Transaction[]
}

model Share {
  id         Int               @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  symbol     String            @unique
  latestPrice Float

  portfolioShares PortfolioShare[]
  transactions Transaction[]
}

model PortfolioShare {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  shareId     Int
  portfolioId Int
  share       Share    @relation(fields: [shareId], references: [id])
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])

  quantity Int
 
  @@unique([shareId, portfolioId])
}

model Transaction {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  shareId     Int
  portfolioId Int
  share       Share    @relation(fields: [shareId], references: [id])
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  
  transactionType TransactionType
  price Decimal @default(0.00)
  quantity Int
  transactionDate DateTime @default(now())

}

enum TransactionType {
  BUY
  SELL
}